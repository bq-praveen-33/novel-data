{
  "online_content": {
    "type": "doc",
    "content": [
      {
        "type": "heading",
        "attrs": {
          "level": 1
        },
        "content": [
          {
            "type": "text",
            "text": "Introduction to React"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "React is a JavaScript library for building user interfaces, particularly single-page applications. It was developed and is maintained by Facebook (now Meta) and a community of individual developers and companies. React was first deployed on Facebook's newsfeed in 2011 and later open-sourced in May 2013 concurrent. "
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "Advanced CapabilitiesKey Features"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 3
        },
        "content": [
          {
            "type": "text",
            "text": "Declarative ProgrammingComponent-Based Architecture"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "React uses a declarative paradigm that makes it easier to reason about your application. Simply describe how your app should look at any given point in time, and React efficiently updates and renders the right components when your data changes. This approach leads to more predictable code that's easier to debug concurrent.React is built around the concept of reusable components. Components are isolated pieces of code that can manage their own state and render UI elements. This modular approach makes code more maintainable and encourages reusability."
          }
        ]
      },
      {
        "type": "codeBlock",
        "attrs": {
          "language": "jsx"
        },
        "content": [
          {
            "type": "text",
            "text": "// Declarative approach in React\nfunction TemperatureDisplay({ temperature }) {\n  return (\n    <div>\n      {temperature > 30 ? \n        <p>It's hot outside!</p> : \n        <p>The weather is pleasant.</p>\n      }\n    </div>\n  );\n}// A simple React component\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\n// Using the component\nfunction App() {\n  return (\n    <div>\n      <Welcome name=\"Sara\" />\n      <Welcome name=\"Cahal\" />\n      <Welcome name=\"Edite\" />\n    </div>\n  );\n}\n\n"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 3
        },
        "content": [
          {
            "type": "text",
            "text": "React FiberVirtual DOM"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "React Fiber is the reimplementation of React's core algorithm. It enables incremental rendering, splitting rendering work into chunks and spreading it out over multiple frames. This allows React to pause, abort, or reuse work as new updates come in, significantly improving responsiveness for complex user interfaces.React implements a virtual DOM, which is a lightweight representation of the real DOM. When state changes occur, React first updates the virtual DOM, compares it with the previous version (a process called \"diffing\"), and then efficiently updates only the necessary parts of the real DOM. This approach significantly improves performance."
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 3
        },
        "content": [
          {
            "type": "text",
            "text": "Server ComponentsJSX"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "React Server Components represent a new paradigm that allows components to render directly on the server, reducing the JavaScript sent to the client. This improves performance, especially for data-heavy applications, while maintaining React's component model.JSX is a syntax extension for JavaScript that resembles HTML. It allows you to write HTML-like code in your JavaScript files, making the structure of UI components more readable and intuitive."
          }
        ]
      },
      {
        "type": "codeBlock",
        "attrs": {
          "language": "jsx"
        },
        "content": [
          {
            "type": "text",
            "text": "// Server component example\n// Note: This is a simplified example\n'use server';\n\nasync function ProductDetails({ id }) {\n  const product = await fetchProductFromDatabase(id);\n  return <div>{product.name} - ${product.price}</div>;\n}const element = <h1>Hello, world!</h1>;\n\n"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 3
        },
        "content": [
          {
            "type": "text",
            "text": "Concurrent Features asdfg Unidirectional Data Flow"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "React's concurrent mode allows rendering to be interruptible, enabling better user experiences. Features like Suspense for data fetching, transitions, and deferred values help create smoother interfaces that remain responsive even during intensive operations.React follows a one-way data binding model. Data flows down from parent components to child components via props. This makes the code more predictable and easier to debug."
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "Introduced in React 16.8, Hooks allow you to use state and other React features without writing a class. This was a revolutionary addition that simplified many aspects of React development."
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 3
        },
        "content": [
          {
            "type": "text",
            "text": "Common Hooks"
          }
        ]
      },
      {
        "type": "bulletList",
        "attrs": {
          "tight": true
        },
        "content": [
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "text": "useState"
                  },
                  {
                    "type": "text",
                    "text": ": Allows functional components to manage state"
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "text": "useEffect"
                  },
                  {
                    "type": "text",
                    "text": ": Handles side effects in functional components"
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "text": "useContext"
                  },
                  {
                    "type": "text",
                    "text": ": Accesses context values"
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "text": "useReducer"
                  },
                  {
                    "type": "text",
                    "text": ": An alternative to useState for complex state logic"
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "marks": [
                      {
                        "type": "bold"
                      }
                    ],
                    "text": "useRef"
                  },
                  {
                    "type": "text",
                    "text": ": Creates a mutable reference that persists across renders"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "codeBlock",
        "attrs": {
          "language": "jsx"
        },
        "content": [
          {
            "type": "text",
            "text": "import React, { useState, useEffect } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  // Similar to componentDidMount and componentDidUpdate\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}import React, { useState, useEffect } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  // Similar to componentDidMount and componentDidUpdate\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n\n"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "React Ecosystem"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "React has a rich ecosystem of libraries and tools that enhance its capabilities:"
          }
        ]
      },
      {
        "type": "table",
        "content": [
          {
            "type": "tableRow",
            "content": [
              {
                "type": "tableHeader",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "Library/Tool"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "tableHeader",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "marks": [
                          {
                            "type": "bold"
                          }
                        ],
                        "text": "Purpose"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "tableRow",
            "content": [
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "React Router"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Handles routing in single-page applications"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "tableRow",
            "content": [
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Redux"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "State management library"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "tableRow",
            "content": [
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Next.js"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Framework for server-rendered React applications"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "tableRow",
            "content": [
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Create React App"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Tool to set up a new React project with zero configuration"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "tableRow",
            "content": [
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "React Native"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Framework for building native mobile apps using React"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "tableRow",
            "content": [
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Material-UI"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "tableCell",
                "attrs": {
                  "colspan": 1,
                  "rowspan": 1,
                  "colwidth": null
                },
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Component library implementing Google's Material Design"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "Setting Up a React Project"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "The easiest way to start a new React project is with Create React App:"
          }
        ]
      },
      {
        "type": "codeBlock",
        "attrs": {
          "language": "bash"
        },
        "content": [
          {
            "type": "text",
            "text": "npx create-react-app my-app\ncd my-app\nnpm startnpx create-react-app my-app\ncd my-app\nnpm start\n\n"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "This creates a new React application with a development server, webpack configuration, and basic project structure."
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "React's Popularity and Future"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "React continues to be one of the most popular front-end libraries, with a strong community and regular updates. Its component-based architecture has influenced many other frameworks and libraries in the JavaScript ecosystem."
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "Future directions for React include improvements to concurrent rendering, server components, and better integration with emerging web standards."
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "Conclusion"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "React has revolutionized the way developers build user interfaces on the web. Its component-based architecture, virtual DOM, and unidirectional data flow have set standards for modern web development. Whether you're building a simple widget or a complex single-page application, React provides the tools and patterns to create efficient, maintainable, and scalable user interfaces. "
          }
        ]
      }
    ]
  },
  "online_content_time": "2025-08-07T14:13:00.841Z"
}